[tox]
envlist = py38-django{32,40}-celery{44,50}-drf{latest}

[testenv]
run_before =
	grep -e "^django==" {toxinidir}/requirements/base.txt > {toxinidir}/requirements/django32.txt
	grep -e "^djangorestframework==" {toxinidir}/requirements/base.txt > {toxinidir}/requirements/drf.txt
    # Let tox control the versions for Django, DRF and celery for testing
    cp {toxinidir}/requirements/base.txt {toxinidir}/requirements/tox_temp.txt
	sed -i.tmp '/^django==/d;/^vine==/d;/^amqp==/d;/^anyjson==/d' {toxinidir}/requirements/tox_temp.txt
	sed -i.tmp '/^djangorestframework==/d;/^billiard==/d' {toxinidir}/requirements/tox_temp.txt
	sed -i.tmp '/^celery==/d;/^kombu==/d' {toxinidir}/requirements/tox_temp.txt
	rm {toxinidir}/requirements/tox_temp.txt.tmp
deps = 
    django32: -r{toxinidir}/requirements/django32.txt
    django40: Django>=4.0,<4.1
    drflatest: -r{toxinidir}/requirements/drf.txt
    celery44: -r{toxinidir}/requirements/celery44.txt
    celery50: celery>=5.0,<6.0
    -r{toxinidir}/requirements/test_layer.txt
    -r{toxinidir}/requirements/tox_temp.txt
whitelist_externals = 
    sed
    rm
commands = 
    python -Wd -m pytest {posargs}
commands_post = 
    rm -f {toxinidir}/requirements/tox_temp.txt
    rm -f {toxinidir}/requirements/django32.txt
    rm -f {toxinidir}/requirements/drf.txt

[testenv:docs]
setenv = 
    DJANGO_SETTINGS_MODULE = test_settings
    PYTHONPATH = {toxinidir}
whitelist_externals = 
    make
    rm
deps = 
    -r{toxinidir}/requirements/doc.txt
commands = 
    doc8 --ignore-path docs/_build README.rst docs
    rm -f docs/super_csv.rst
    rm -f docs/modules.rst
    make -C docs clean
    make -C docs html
    python setup.py bdist_wheel
    twine check dist/*

[testenv:quality]
whitelist_externals = 
    make
    rm
    touch
deps = 
    -r{toxinidir}/requirements/quality.txt
commands = 
    touch tests/__init__.py
    pylint super_csv manage.py setup.py
    rm tests/__init__.py
    pycodestyle super_csv manage.py setup.py
    isort --check-only --diff tests test_utils super_csv manage.py setup.py test_settings.py
    make selfcheck

[testenv:pii_check]
setenv = 
    DJANGO_SETTINGS_MODULE = test_settings
deps = 
    -r{toxinidir}/requirements/test.txt
commands = 
    code_annotations django_find_annotations --config_file .pii_annotations.yml --lint --report --coverage

